<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390"
	 xmlns="http://www.w3.org/2000/svg">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="390.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="373" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="373" > </text>
<g id="frames">
<g >
<title>handle_mm_fault (239,665,701 samples, 1.76%)</title><rect x="1162.6" y="213" width="20.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1165.58" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (107,388,677 samples, 0.79%)</title><rect x="1074.6" y="197" width="9.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1077.58" y="207.5" ></text>
</g>
<g >
<title>change_pmd_range.isra.0 (38,098,019 samples, 0.28%)</title><rect x="1132.0" y="117" width="3.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1135.05" y="127.5" ></text>
</g>
<g >
<title>handle_mm_fault (38,238,024 samples, 0.28%)</title><rect x="66.8" y="245" width="3.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="69.85" y="255.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (159,411,356 samples, 1.17%)</title><rect x="73.5" y="229" width="13.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="76.52" y="239.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (159,411,356 samples, 1.17%)</title><rect x="73.5" y="197" width="13.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="76.52" y="207.5" ></text>
</g>
<g >
<title>NFibers::AwaiterFiber::Run (389,526,308 samples, 2.86%)</title><rect x="29.8" y="309" width="33.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="32.78" y="319.5" >NF..</text>
</g>
<g >
<title>do_syscall_64 (159,411,356 samples, 1.17%)</title><rect x="73.5" y="277" width="13.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="76.52" y="287.5" ></text>
</g>
<g >
<title>mas_prev_slot (271,470,879 samples, 1.99%)</title><rect x="1108.5" y="165" width="23.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1111.52" y="175.5" >m..</text>
</g>
<g >
<title>get_page_from_freelist (38,390,490 samples, 0.28%)</title><rect x="1176.5" y="85" width="3.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1179.53" y="95.5" ></text>
</g>
<g >
<title>exc_page_fault (38,238,024 samples, 0.28%)</title><rect x="66.8" y="277" width="3.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="69.85" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (198,836,721 samples, 1.46%)</title><rect x="1166.1" y="197" width="17.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1169.12" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (542,641,371 samples, 3.99%)</title><rect x="1101.9" y="245" width="47.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1104.86" y="255.5" >do_s..</text>
</g>
<g >
<title>mt_find (40,987,735 samples, 0.30%)</title><rect x="1138.6" y="101" width="3.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1141.65" y="111.5" ></text>
</g>
<g >
<title>exit_mm (50,258,235 samples, 0.37%)</title><rect x="1097.5" y="213" width="4.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1100.51" y="223.5" ></text>
</g>
<g >
<title>exc_page_fault (36,595,872 samples, 0.27%)</title><rect x="26.6" y="277" width="3.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="29.60" y="287.5" ></text>
</g>
<g >
<title>_int_free (197,946,440 samples, 1.45%)</title><rect x="46.4" y="277" width="17.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="49.38" y="287.5" ></text>
</g>
<g >
<title>mprotect_fixup (37,982,739 samples, 0.28%)</title><rect x="1155.9" y="165" width="3.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1158.93" y="175.5" ></text>
</g>
<g >
<title>exc_page_fault (316,678,403 samples, 2.33%)</title><rect x="1159.2" y="245" width="27.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1162.22" y="255.5" >e..</text>
</g>
<g >
<title>down_write_killable (122,697,854 samples, 0.90%)</title><rect x="1064.0" y="133" width="10.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1066.95" y="143.5" ></text>
</g>
<g >
<title>vma_adjust_trans_huge (37,982,739 samples, 0.28%)</title><rect x="1155.9" y="117" width="3.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1158.93" y="127.5" ></text>
</g>
<g >
<title>NFibers::NCoro::StackfullCoroutine::Run (38,269,026 samples, 0.28%)</title><rect x="63.5" y="309" width="3.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="66.53" y="319.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (39,365,797 samples, 0.29%)</title><rect x="1142.2" y="181" width="3.4" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1145.20" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_lock (38,755,017 samples, 0.28%)</title><rect x="29.8" y="197" width="3.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="32.78" y="207.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (43,866,420 samples, 0.32%)</title><rect x="36.1" y="37" width="3.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="39.07" y="47.5" ></text>
</g>
<g >
<title>operator new (1,016,879,479 samples, 7.47%)</title><rect x="1101.9" y="309" width="88.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1104.86" y="319.5" >operator new</text>
</g>
<g >
<title>x64_sys_call (542,641,371 samples, 3.99%)</title><rect x="1101.9" y="229" width="47.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1104.86" y="239.5" >x64_..</text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (122,697,854 samples, 0.90%)</title><rect x="1064.0" y="293" width="10.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1066.95" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (48,340,365 samples, 0.36%)</title><rect x="90.8" y="181" width="4.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="93.76" y="191.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (350,771,291 samples, 2.58%)</title><rect x="33.1" y="293" width="30.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="36.13" y="303.5" >cf..</text>
</g>
<g >
<title>__x64_sys_exit_group (50,258,235 samples, 0.37%)</title><rect x="1097.5" y="261" width="4.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1100.51" y="271.5" ></text>
</g>
<g >
<title>exc_page_fault (65,483,297 samples, 0.48%)</title><rect x="1083.9" y="197" width="5.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1086.90" y="207.5" ></text>
</g>
<g >
<title>__handle_mm_fault (36,595,872 samples, 0.27%)</title><rect x="26.6" y="229" width="3.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="29.60" y="239.5" ></text>
</g>
<g >
<title>futex_wait (71,549,539 samples, 0.53%)</title><rect x="1091.3" y="197" width="6.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1094.31" y="207.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (122,697,854 samples, 0.90%)</title><rect x="1064.0" y="85" width="10.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1066.95" y="95.5" ></text>
</g>
<g >
<title>do_user_addr_fault (316,678,403 samples, 2.33%)</title><rect x="1159.2" y="229" width="27.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1162.22" y="239.5" >d..</text>
</g>
<g >
<title>NExecutors::NInternal::Worker::Push (75,253,497 samples, 0.55%)</title><rect x="16.7" y="309" width="6.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="19.65" y="319.5" ></text>
</g>
<g >
<title>NComponents::NHazard::Mutator::IncreaseRetired (38,344,114 samples, 0.28%)</title><rect x="70.2" y="293" width="3.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="73.16" y="303.5" ></text>
</g>
<g >
<title>x64_sys_call (50,258,235 samples, 0.37%)</title><rect x="1097.5" y="277" width="4.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1100.51" y="287.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (39,492,304 samples, 0.29%)</title><rect x="87.3" y="277" width="3.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="90.34" y="287.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (37,275,131 samples, 0.27%)</title><rect x="1169.8" y="133" width="3.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1172.80" y="143.5" ></text>
</g>
<g >
<title>schedule (82,793,048 samples, 0.61%)</title><rect x="36.1" y="133" width="7.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.07" y="143.5" ></text>
</g>
<g >
<title>handle_pte_fault (156,322,547 samples, 1.15%)</title><rect x="1169.8" y="181" width="13.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1172.80" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (37,982,739 samples, 0.28%)</title><rect x="1155.9" y="197" width="3.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1158.93" y="207.5" ></text>
</g>
<g >
<title>irq_exit_rcu (40,882,330 samples, 0.30%)</title><rect x="968.3" y="245" width="3.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="971.32" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (474,238,108 samples, 3.48%)</title><rect x="1148.9" y="277" width="41.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1151.89" y="287.5" >_in..</text>
</g>
<g >
<title>__handle_mm_fault (65,483,297 samples, 0.48%)</title><rect x="1083.9" y="149" width="5.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1086.90" y="159.5" ></text>
</g>
<g >
<title>operator new (125,966,494 samples, 0.93%)</title><rect x="87.3" y="293" width="11.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="90.34" y="303.5" ></text>
</g>
<g >
<title>exc_page_fault (48,340,365 samples, 0.36%)</title><rect x="90.8" y="229" width="4.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="93.76" y="239.5" ></text>
</g>
<g >
<title>__get_user_nocheck_4 (36,176,057 samples, 0.27%)</title><rect x="43.2" y="133" width="3.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="46.24" y="143.5" ></text>
</g>
<g >
<title>free_pgtables (50,258,235 samples, 0.37%)</title><rect x="1097.5" y="149" width="4.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1100.51" y="159.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (65,483,297 samples, 0.48%)</title><rect x="1083.9" y="213" width="5.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1086.90" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (71,549,539 samples, 0.53%)</title><rect x="1091.3" y="277" width="6.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1094.31" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (159,411,356 samples, 1.17%)</title><rect x="73.5" y="293" width="13.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="76.52" y="303.5" ></text>
</g>
<g >
<title>handle_mm_fault (36,595,872 samples, 0.27%)</title><rect x="26.6" y="245" width="3.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="29.60" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (38,755,017 samples, 0.28%)</title><rect x="29.8" y="261" width="3.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="32.78" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (122,697,854 samples, 0.90%)</title><rect x="1064.0" y="165" width="10.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1066.95" y="175.5" ></text>
</g>
<g >
<title>mmput (50,258,235 samples, 0.37%)</title><rect x="1097.5" y="197" width="4.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1100.51" y="207.5" ></text>
</g>
<g >
<title>_int_free_maybe_consolidate (116,755,004 samples, 0.86%)</title><rect x="50.1" y="261" width="10.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="53.05" y="271.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (40,332,358 samples, 0.30%)</title><rect x="1179.9" y="149" width="3.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1182.86" y="159.5" ></text>
</g>
<g >
<title>flush_tlb_batched_pending (38,098,019 samples, 0.28%)</title><rect x="1132.0" y="101" width="3.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1135.05" y="111.5" ></text>
</g>
<g >
<title>change_protection (38,098,019 samples, 0.28%)</title><rect x="1132.0" y="165" width="3.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1135.05" y="175.5" ></text>
</g>
<g >
<title>__mprotect (122,697,854 samples, 0.90%)</title><rect x="1064.0" y="229" width="10.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1066.95" y="239.5" ></text>
</g>
<g >
<title>all (13,616,673,436 samples, 100%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>load_elf_interp.isra.0 (159,411,356 samples, 1.17%)</title><rect x="73.5" y="133" width="13.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="76.52" y="143.5" ></text>
</g>
<g >
<title>dequeue_task_fair (43,866,420 samples, 0.32%)</title><rect x="36.1" y="85" width="3.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="39.07" y="95.5" ></text>
</g>
<g >
<title>NExecutors::DistributedPool::Submit (38,727,560 samples, 0.28%)</title><rect x="13.3" y="309" width="3.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="16.30" y="319.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (48,340,365 samples, 0.36%)</title><rect x="90.8" y="133" width="4.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="93.76" y="143.5" ></text>
</g>
<g >
<title>lock_vma_under_rcu (38,271,452 samples, 0.28%)</title><rect x="1183.4" y="213" width="3.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1186.35" y="223.5" ></text>
</g>
<g >
<title>__handle_mm_fault (38,238,024 samples, 0.28%)</title><rect x="66.8" y="229" width="3.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="69.85" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_futex (38,755,017 samples, 0.28%)</title><rect x="29.8" y="229" width="3.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="32.78" y="239.5" ></text>
</g>
<g >
<title>vma_modify (37,982,739 samples, 0.28%)</title><rect x="1155.9" y="149" width="3.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1158.93" y="159.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (77,599,699 samples, 0.57%)</title><rect x="1169.8" y="149" width="6.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1172.80" y="159.5" ></text>
</g>
<g >
<title>down_write_killable (76,876,393 samples, 0.56%)</title><rect x="1101.9" y="181" width="6.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1104.86" y="191.5" ></text>
</g>
<g >
<title>update_load_avg (43,866,420 samples, 0.32%)</title><rect x="36.1" y="53" width="3.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="39.07" y="63.5" ></text>
</g>
<g >
<title>exec_binprm (159,411,356 samples, 1.17%)</title><rect x="73.5" y="181" width="13.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="76.52" y="191.5" ></text>
</g>
<g >
<title>x64_sys_call (122,697,854 samples, 0.90%)</title><rect x="1064.0" y="181" width="10.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1066.95" y="191.5" ></text>
</g>
<g >
<title>do_anonymous_page (48,340,365 samples, 0.36%)</title><rect x="90.8" y="149" width="4.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="93.76" y="159.5" ></text>
</g>
<g >
<title>dequeue_entity (43,866,420 samples, 0.32%)</title><rect x="36.1" y="69" width="3.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="39.07" y="79.5" ></text>
</g>
<g >
<title>change_protection_range (38,098,019 samples, 0.28%)</title><rect x="1132.0" y="149" width="3.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1135.05" y="159.5" ></text>
</g>
<g >
<title>mas_prev (271,470,879 samples, 1.99%)</title><rect x="1108.5" y="181" width="23.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1111.52" y="191.5" >m..</text>
</g>
<g >
<title>arena_get2.part.0 (173,005,199 samples, 1.27%)</title><rect x="1074.6" y="245" width="15.0" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1077.58" y="255.5" ></text>
</g>
<g >
<title>futex_wait_setup (36,176,057 samples, 0.27%)</title><rect x="43.2" y="149" width="3.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="46.24" y="159.5" ></text>
</g>
<g >
<title>NComponents::BasicFunction&lt;void  (38,053,355 samples, 0.28%)</title><rect x="10.0" y="309" width="3.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>folio_add_lru (40,332,358 samples, 0.30%)</title><rect x="1179.9" y="133" width="3.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1182.86" y="143.5" ></text>
</g>
<g >
<title>futex_wait (39,492,304 samples, 0.29%)</title><rect x="87.3" y="181" width="3.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="90.34" y="191.5" ></text>
</g>
<g >
<title>__mprotect (37,982,739 samples, 0.28%)</title><rect x="1155.9" y="261" width="3.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1158.93" y="271.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (48,340,365 samples, 0.36%)</title><rect x="90.8" y="245" width="4.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="93.76" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (40,882,330 samples, 0.30%)</title><rect x="968.3" y="277" width="3.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="971.32" y="287.5" ></text>
</g>
<g >
<title>sync_regs (38,133,825 samples, 0.28%)</title><rect x="94.9" y="245" width="3.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="97.95" y="255.5" ></text>
</g>
<g >
<title>__futex_wait (39,492,304 samples, 0.29%)</title><rect x="87.3" y="165" width="3.5" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="90.34" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (152,824,851 samples, 1.12%)</title><rect x="33.1" y="245" width="13.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="36.13" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (40,882,330 samples, 0.30%)</title><rect x="968.3" y="261" width="3.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="971.32" y="271.5" ></text>
</g>
<g >
<title>operator new (173,005,199 samples, 1.27%)</title><rect x="1074.6" y="293" width="15.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1077.58" y="303.5" ></text>
</g>
<g >
<title>__futex_wait (152,824,851 samples, 1.12%)</title><rect x="33.1" y="165" width="13.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="36.13" y="175.5" ></text>
</g>
<g >
<title>handle_mm_fault (48,340,365 samples, 0.36%)</title><rect x="90.8" y="197" width="4.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="93.76" y="207.5" ></text>
</g>
<g >
<title>x64_sys_call (152,824,851 samples, 1.12%)</title><rect x="33.1" y="229" width="13.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="36.13" y="239.5" ></text>
</g>
<g >
<title>handle_pte_fault (36,595,872 samples, 0.27%)</title><rect x="26.6" y="213" width="3.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="29.60" y="223.5" ></text>
</g>
<g >
<title>NFibers::AsyncMutex::Lock (76,169,236 samples, 0.56%)</title><rect x="23.2" y="309" width="6.6" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="26.18" y="319.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (122,697,854 samples, 0.90%)</title><rect x="1064.0" y="149" width="10.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1066.95" y="159.5" ></text>
</g>
<g >
<title>rcu_core (40,882,330 samples, 0.30%)</title><rect x="968.3" y="181" width="3.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="971.32" y="191.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (122,697,854 samples, 0.90%)</title><rect x="1064.0" y="277" width="10.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1066.95" y="287.5" ></text>
</g>
<g >
<title>alloc_anon_folio (38,390,490 samples, 0.28%)</title><rect x="1176.5" y="149" width="3.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1179.53" y="159.5" ></text>
</g>
<g >
<title>find_vma (40,987,735 samples, 0.30%)</title><rect x="1138.6" y="117" width="3.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1141.65" y="127.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (238,270,267 samples, 1.75%)</title><rect x="98.3" y="293" width="20.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="101.25" y="303.5" ></text>
</g>
<g >
<title>perf_event_mmap (38,043,329 samples, 0.28%)</title><rect x="1135.3" y="165" width="3.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1138.35" y="175.5" ></text>
</g>
<g >
<title>do_anonymous_page (36,595,872 samples, 0.27%)</title><rect x="26.6" y="197" width="3.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="29.60" y="207.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast@plt (116,468,780 samples, 0.86%)</title><rect x="118.9" y="293" width="10.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="121.90" y="303.5" ></text>
</g>
<g >
<title>x64_sys_call (37,982,739 samples, 0.28%)</title><rect x="1155.9" y="213" width="3.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1158.93" y="223.5" ></text>
</g>
<g >
<title>__vm_munmap (107,388,677 samples, 0.79%)</title><rect x="1074.6" y="149" width="9.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1077.58" y="159.5" ></text>
</g>
<g >
<title>rcu_do_batch (40,882,330 samples, 0.30%)</title><rect x="968.3" y="165" width="3.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="971.32" y="175.5" ></text>
</g>
<g >
<title>load_elf_binary (159,411,356 samples, 1.17%)</title><rect x="73.5" y="149" width="13.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="76.52" y="159.5" ></text>
</g>
<g >
<title>mas_walk (38,271,452 samples, 0.28%)</title><rect x="1183.4" y="197" width="3.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1186.35" y="207.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (542,641,371 samples, 3.99%)</title><rect x="1101.9" y="197" width="47.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1104.86" y="207.5" >do_m..</text>
</g>
<g >
<title>alloc_pages_mpol (38,390,490 samples, 0.28%)</title><rect x="1176.5" y="117" width="3.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1179.53" y="127.5" ></text>
</g>
<g >
<title>__do_softirq (40,882,330 samples, 0.30%)</title><rect x="968.3" y="213" width="3.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="971.32" y="223.5" ></text>
</g>
<g >
<title>_int_malloc (86,474,190 samples, 0.64%)</title><rect x="90.8" y="261" width="7.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="93.76" y="271.5" ></text>
</g>
<g >
<title>exit_mmap (50,258,235 samples, 0.37%)</title><rect x="1097.5" y="165" width="4.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1100.51" y="175.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (38,238,024 samples, 0.28%)</title><rect x="66.8" y="293" width="3.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="69.85" y="303.5" ></text>
</g>
<g >
<title>futex_unqueue (71,329,785 samples, 0.52%)</title><rect x="1091.3" y="165" width="6.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1094.31" y="175.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (38,190,415 samples, 0.28%)</title><rect x="1105.2" y="165" width="3.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1108.21" y="175.5" ></text>
</g>
<g >
<title>bprm_execve (159,411,356 samples, 1.17%)</title><rect x="73.5" y="213" width="13.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="76.52" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (107,388,677 samples, 0.79%)</title><rect x="1074.6" y="213" width="9.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1077.58" y="223.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (19,946,148 samples, 0.15%)</title><rect x="1089.6" y="245" width="1.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1092.58" y="255.5" ></text>
</g>
<g >
<title>free_pgd_range (50,258,235 samples, 0.37%)</title><rect x="1097.5" y="133" width="4.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1100.51" y="143.5" ></text>
</g>
<g >
<title>do_anonymous_page (156,322,547 samples, 1.15%)</title><rect x="1169.8" y="165" width="13.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1172.80" y="175.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (316,678,403 samples, 2.33%)</title><rect x="1159.2" y="261" width="27.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1162.22" y="271.5" >a..</text>
</g>
<g >
<title>do_user_addr_fault (48,340,365 samples, 0.36%)</title><rect x="90.8" y="213" width="4.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="93.76" y="223.5" ></text>
</g>
<g >
<title>x64_sys_call (71,549,539 samples, 0.53%)</title><rect x="1091.3" y="245" width="6.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1094.31" y="255.5" ></text>
</g>
<g >
<title>malloc (86,474,190 samples, 0.64%)</title><rect x="90.8" y="277" width="7.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="93.76" y="287.5" ></text>
</g>
<g >
<title>__mprotect (542,641,371 samples, 3.99%)</title><rect x="1101.9" y="277" width="47.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1104.86" y="287.5" >__mp..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (50,258,235 samples, 0.37%)</title><rect x="1097.5" y="309" width="4.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1100.51" y="319.5" ></text>
</g>
<g >
<title>__schedule (82,793,048 samples, 0.61%)</title><rect x="36.1" y="117" width="7.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="39.07" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (39,492,304 samples, 0.29%)</title><rect x="87.3" y="245" width="3.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="90.34" y="255.5" ></text>
</g>
<g >
<title>__munmap (107,388,677 samples, 0.79%)</title><rect x="1074.6" y="229" width="9.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1077.58" y="239.5" ></text>
</g>
<g >
<title>example_workloa (13,616,465,656 samples, 100.00%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >example_workloa</text>
</g>
<g >
<title>do_syscall_64 (50,258,235 samples, 0.37%)</title><rect x="1097.5" y="293" width="4.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1100.51" y="303.5" ></text>
</g>
<g >
<title>clone3 (388,238,124 samples, 2.85%)</title><rect x="1063.9" y="309" width="33.6" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1066.86" y="319.5" >cl..</text>
</g>
<g >
<title>__lll_lock_wait_private (152,824,851 samples, 1.12%)</title><rect x="33.1" y="277" width="13.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="36.13" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages (38,390,490 samples, 0.28%)</title><rect x="1176.5" y="101" width="3.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1179.53" y="111.5" ></text>
</g>
<g >
<title>do_user_addr_fault (36,595,872 samples, 0.27%)</title><rect x="26.6" y="261" width="3.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="29.60" y="271.5" ></text>
</g>
<g >
<title>rep_stos_alternative (159,411,356 samples, 1.17%)</title><rect x="73.5" y="117" width="13.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="76.52" y="127.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (107,388,677 samples, 0.79%)</title><rect x="1074.6" y="165" width="9.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1077.58" y="175.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (40,882,330 samples, 0.30%)</title><rect x="968.3" y="229" width="3.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="971.32" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (38,755,017 samples, 0.28%)</title><rect x="29.8" y="277" width="3.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="32.78" y="287.5" ></text>
</g>
<g >
<title>alloc_new_heap (65,616,522 samples, 0.48%)</title><rect x="1083.9" y="229" width="5.7" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1086.89" y="239.5" ></text>
</g>
<g >
<title>start_thread (19,946,148 samples, 0.15%)</title><rect x="1089.6" y="293" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1092.58" y="303.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (38,190,415 samples, 0.28%)</title><rect x="1105.2" y="149" width="3.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1108.21" y="159.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (107,388,677 samples, 0.79%)</title><rect x="1074.6" y="101" width="9.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1077.58" y="111.5" ></text>
</g>
<g >
<title>handle_pte_fault (38,238,024 samples, 0.28%)</title><rect x="66.8" y="213" width="3.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="69.85" y="223.5" ></text>
</g>
<g >
<title>__split_huge_pmd (37,982,739 samples, 0.28%)</title><rect x="1155.9" y="101" width="3.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1158.93" y="111.5" ></text>
</g>
<g >
<title>arch_vma_name (38,043,329 samples, 0.28%)</title><rect x="1135.3" y="149" width="3.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1138.35" y="159.5" ></text>
</g>
<g >
<title>PrepareContextInBuffer (38,238,024 samples, 0.28%)</title><rect x="66.8" y="309" width="3.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="69.85" y="319.5" ></text>
</g>
<g >
<title>futex_wait_queue (82,793,048 samples, 0.61%)</title><rect x="36.1" y="149" width="7.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="39.07" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_execve (159,411,356 samples, 1.17%)</title><rect x="73.5" y="245" width="13.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="76.52" y="255.5" ></text>
</g>
<g >
<title>search_binary_handler (159,411,356 samples, 1.17%)</title><rect x="73.5" y="165" width="13.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="76.52" y="175.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (36,595,872 samples, 0.27%)</title><rect x="26.6" y="293" width="3.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="29.60" y="303.5" ></text>
</g>
<g >
<title>malloc (173,005,199 samples, 1.27%)</title><rect x="1074.6" y="277" width="15.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1077.58" y="287.5" ></text>
</g>
<g >
<title>free_pud_range (50,258,235 samples, 0.37%)</title><rect x="1097.5" y="101" width="4.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1100.51" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (37,982,739 samples, 0.28%)</title><rect x="1155.9" y="245" width="3.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1158.93" y="255.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (122,697,854 samples, 0.90%)</title><rect x="1064.0" y="101" width="10.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1066.95" y="111.5" ></text>
</g>
<g >
<title>do_syscall_64 (37,982,739 samples, 0.28%)</title><rect x="1155.9" y="229" width="3.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1158.93" y="239.5" ></text>
</g>
<g >
<title>handle_mm_fault (65,483,297 samples, 0.48%)</title><rect x="1083.9" y="165" width="5.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1086.90" y="175.5" ></text>
</g>
<g >
<title>x64_sys_call (39,492,304 samples, 0.29%)</title><rect x="87.3" y="229" width="3.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="90.34" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_futex (152,824,851 samples, 1.12%)</title><rect x="33.1" y="213" width="13.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="36.13" y="223.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (122,697,854 samples, 0.90%)</title><rect x="1064.0" y="117" width="10.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1066.95" y="127.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (37,982,739 samples, 0.28%)</title><rect x="1155.9" y="181" width="3.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1158.93" y="191.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (107,388,677 samples, 0.79%)</title><rect x="1074.6" y="85" width="9.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1077.58" y="95.5" ></text>
</g>
<g >
<title>__lll_lock_wake_private (38,755,017 samples, 0.28%)</title><rect x="29.8" y="293" width="3.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="32.78" y="303.5" ></text>
</g>
<g >
<title>__mmput (50,258,235 samples, 0.37%)</title><rect x="1097.5" y="181" width="4.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1100.51" y="191.5" ></text>
</g>
<g >
<title>rcu_core_si (40,882,330 samples, 0.30%)</title><rect x="968.3" y="197" width="3.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="971.32" y="207.5" ></text>
</g>
<g >
<title>_int_free_merge_chunk (38,800,858 samples, 0.28%)</title><rect x="60.2" y="261" width="3.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="63.17" y="271.5" ></text>
</g>
<g >
<title>name_stack_maps (19,946,148 samples, 0.15%)</title><rect x="1089.6" y="277" width="1.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1092.58" y="287.5" ></text>
</g>
<g >
<title>kmem_cache_free (40,882,330 samples, 0.30%)</title><rect x="968.3" y="133" width="3.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="971.32" y="143.5" ></text>
</g>
<g >
<title>__futex_wait (71,549,539 samples, 0.53%)</title><rect x="1091.3" y="181" width="6.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1094.31" y="191.5" ></text>
</g>
<g >
<title>handle_pte_fault (48,340,365 samples, 0.36%)</title><rect x="90.8" y="165" width="4.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="93.76" y="175.5" ></text>
</g>
<g >
<title>arena_get2.part.0 (122,697,854 samples, 0.90%)</title><rect x="1064.0" y="245" width="10.6" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1066.95" y="255.5" ></text>
</g>
<g >
<title>vma_adjust_trans_huge (40,987,735 samples, 0.30%)</title><rect x="1138.6" y="133" width="3.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1141.65" y="143.5" ></text>
</g>
<g >
<title>__printf_buffer (19,946,148 samples, 0.15%)</title><rect x="1089.6" y="229" width="1.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1092.58" y="239.5" ></text>
</g>
<g >
<title>futex_wait (152,824,851 samples, 1.12%)</title><rect x="33.1" y="181" width="13.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="36.13" y="191.5" ></text>
</g>
<g >
<title>change_p4d_range (38,098,019 samples, 0.28%)</title><rect x="1132.0" y="133" width="3.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1135.05" y="143.5" ></text>
</g>
<g >
<title>do_futex (38,755,017 samples, 0.28%)</title><rect x="29.8" y="213" width="3.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="32.78" y="223.5" ></text>
</g>
<g >
<title>mprotect_fixup (117,129,083 samples, 0.86%)</title><rect x="1132.0" y="181" width="10.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1135.05" y="191.5" ></text>
</g>
<g >
<title>tcache_init.part.0 (122,697,854 samples, 0.90%)</title><rect x="1064.0" y="261" width="10.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1066.95" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (542,641,371 samples, 3.99%)</title><rect x="1101.9" y="261" width="47.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1104.86" y="271.5" >entr..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (39,492,304 samples, 0.29%)</title><rect x="87.3" y="261" width="3.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="90.34" y="271.5" ></text>
</g>
<g >
<title>do_futex (71,549,539 samples, 0.53%)</title><rect x="1091.3" y="213" width="6.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1094.31" y="223.5" ></text>
</g>
<g >
<title>malloc (1,016,879,479 samples, 7.47%)</title><rect x="1101.9" y="293" width="88.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1104.86" y="303.5" >malloc</text>
</g>
<g >
<title>try_charge_memcg (40,324,568 samples, 0.30%)</title><rect x="1173.0" y="133" width="3.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1176.03" y="143.5" ></text>
</g>
<g >
<title>do_futex (39,492,304 samples, 0.29%)</title><rect x="87.3" y="197" width="3.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="90.34" y="207.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (107,388,677 samples, 0.79%)</title><rect x="1074.6" y="117" width="9.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1077.58" y="127.5" ></text>
</g>
<g >
<title>vma_alloc_folio (38,390,490 samples, 0.28%)</title><rect x="1176.5" y="133" width="3.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1179.53" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_futex (39,492,304 samples, 0.29%)</title><rect x="87.3" y="213" width="3.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="90.34" y="223.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (38,926,628 samples, 0.29%)</title><rect x="39.9" y="101" width="3.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="42.87" y="111.5" ></text>
</g>
<g >
<title>vma_merge (40,987,735 samples, 0.30%)</title><rect x="1138.6" y="149" width="3.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1141.65" y="159.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (1,060,474,645 samples, 7.79%)</title><rect x="971.9" y="277" width="91.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="974.86" y="287.5" >pthread_co..</text>
</g>
<g >
<title>x64_sys_call (38,755,017 samples, 0.28%)</title><rect x="29.8" y="245" width="3.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="32.78" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (122,697,854 samples, 0.90%)</title><rect x="1064.0" y="197" width="10.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1066.95" y="207.5" ></text>
</g>
<g >
<title>post_alloc_hook (38,390,490 samples, 0.28%)</title><rect x="1176.5" y="69" width="3.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1179.53" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (71,549,539 samples, 0.53%)</title><rect x="1091.3" y="261" width="6.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1094.31" y="271.5" ></text>
</g>
<g >
<title>do_group_exit (50,258,235 samples, 0.37%)</title><rect x="1097.5" y="245" width="4.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1100.51" y="255.5" ></text>
</g>
<g >
<title>do_futex (152,824,851 samples, 1.12%)</title><rect x="33.1" y="197" width="13.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="36.13" y="207.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;NExecutors::NInternal::Worker::Start (10,433,776,490 samples, 76.63%)</title><rect x="159.6" y="293" width="904.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="162.59" y="303.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;NExecutors::NInternal::Worker::Start</text>
</g>
<g >
<title>__x64_sys_mprotect (542,641,371 samples, 3.99%)</title><rect x="1101.9" y="213" width="47.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1104.86" y="223.5" >__x6..</text>
</g>
<g >
<title>__x64_sys_futex (71,549,539 samples, 0.53%)</title><rect x="1091.3" y="229" width="6.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1094.31" y="239.5" ></text>
</g>
<g >
<title>syscall (71,549,539 samples, 0.53%)</title><rect x="1091.3" y="293" width="6.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1094.31" y="303.5" ></text>
</g>
<g >
<title>sync_regs (38,247,851 samples, 0.28%)</title><rect x="1186.7" y="261" width="3.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1189.67" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (38,238,024 samples, 0.28%)</title><rect x="66.8" y="261" width="3.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="69.85" y="271.5" ></text>
</g>
<g >
<title>__GI___snprintf (19,946,148 samples, 0.15%)</title><rect x="1089.6" y="261" width="1.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1092.58" y="271.5" ></text>
</g>
<g >
<title>do_exit (50,258,235 samples, 0.37%)</title><rect x="1097.5" y="229" width="4.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1100.51" y="239.5" ></text>
</g>
<g >
<title>tcache_init.part.0 (173,005,199 samples, 1.27%)</title><rect x="1074.6" y="261" width="15.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1077.58" y="271.5" ></text>
</g>
<g >
<title>malloc_consolidate (116,755,004 samples, 0.86%)</title><rect x="50.1" y="245" width="10.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="53.05" y="255.5" ></text>
</g>
<g >
<title>vma_modify (40,987,735 samples, 0.30%)</title><rect x="1138.6" y="165" width="3.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1141.65" y="175.5" ></text>
</g>
<g >
<title>do_user_addr_fault (65,483,297 samples, 0.48%)</title><rect x="1083.9" y="181" width="5.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1086.90" y="191.5" ></text>
</g>
<g >
<title>free_p4d_range (50,258,235 samples, 0.37%)</title><rect x="1097.5" y="117" width="4.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1100.51" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (122,697,854 samples, 0.90%)</title><rect x="1064.0" y="213" width="10.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1066.95" y="223.5" ></text>
</g>
<g >
<title>__split_vma (37,982,739 samples, 0.28%)</title><rect x="1155.9" y="133" width="3.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1158.93" y="143.5" ></text>
</g>
<g >
<title>futex_q_unlock (39,492,304 samples, 0.29%)</title><rect x="87.3" y="133" width="3.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="90.34" y="143.5" ></text>
</g>
<g >
<title>std::condition_variable::notify_all (353,028,374 samples, 2.59%)</title><rect x="129.0" y="293" width="30.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="131.99" y="303.5" >st..</text>
</g>
<g >
<title>futex_wait_setup (39,492,304 samples, 0.29%)</title><rect x="87.3" y="149" width="3.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="90.34" y="159.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (37,799,219 samples, 0.28%)</title><rect x="1145.6" y="181" width="3.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1148.61" y="191.5" ></text>
</g>
<g >
<title>x64_sys_call (159,411,356 samples, 1.17%)</title><rect x="73.5" y="261" width="13.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="76.52" y="271.5" ></text>
</g>
<g >
<title>dequeue_task (43,866,420 samples, 0.32%)</title><rect x="36.1" y="101" width="3.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="39.07" y="111.5" ></text>
</g>
<g >
<title>x64_sys_call (107,388,677 samples, 0.79%)</title><rect x="1074.6" y="181" width="9.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1077.58" y="191.5" ></text>
</g>
<g >
<title>down_write_killable (107,388,677 samples, 0.79%)</title><rect x="1074.6" y="133" width="9.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1077.58" y="143.5" ></text>
</g>
<g >
<title>mt_free_rcu (40,882,330 samples, 0.30%)</title><rect x="968.3" y="149" width="3.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="971.32" y="159.5" ></text>
</g>
<g >
<title>__pte_offset_map (38,238,024 samples, 0.28%)</title><rect x="66.8" y="197" width="3.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="69.85" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (152,824,851 samples, 1.12%)</title><rect x="33.1" y="261" width="13.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="36.13" y="271.5" ></text>
</g>
<g >
<title>[unknown] (11,465,705,853 samples, 84.20%)</title><rect x="70.2" y="309" width="993.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="73.16" y="319.5" >[unknown]</text>
</g>
</g>
</svg>
